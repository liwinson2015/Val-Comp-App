/* Square-slot bracket, compact width, exact (border-aware) centering without transform scaling */

/* ---------- Canvas sizing (no transform scaling) ---------- */
.viewport{
  /* page padding budget (brand/header margins). Tweak if needed */
  --outerPad: 160px;

  /* gaps & column width auto-fit to viewport */
  --gap:  18px;

  /* Compute a column width that fits 7 columns + 6 gaps inside viewport minus outerPad. */
  --colw: clamp(120px, calc((100vw - var(--outerPad) - (6 * var(--gap))) / 7), 155px);

  /* slot & pair geometry */
  --slotH: 38px;          /* height of each player box */
  --pairGapInside: 10px;  /* gap between top/bottom boxes inside a pair */
  --pairPad: 4px;         /* internal vertical padding for connector accuracy */
  --border: 2px;          /* slot border thickness */

  /* derived: full pair height and rhythms */
  --pairH: calc(var(--slotH) * 2 + var(--pairGapInside) + var(--pairPad) * 2 + var(--border) * 2);

  /* vertical rhythms to CENTER next-round boxes between feeders */
  --r16Space: 20px;                          /* spacing between R16 pairs */
  --qfSpace:  calc(var(--pairH) + var(--r16Space)); /* QF centered between two R16 pairs */
  --sfSpace:  calc(var(--pairH) + var(--qfSpace));  /* SF centered between two QFs */

  /* connector styling */
  --line: #2a2f36;           /* bracket line color */
  --joinW: 2px;              /* line thickness */
  --stub: 10px;              /* short stub out of each pair toward next column */
  --arm:  calc(var(--gap) - var(--stub)); /* horizontal arm across the gap */

  /* neutral box colors (we’ll theme later) */
  --slotBg: #f4f6fb;
  --slotBorder: #cfd7ea;
  --textDark: #0f1320;

  /* stage size derives from columns; no transform */
  --stageW: calc(var(--colw) * 7 + var(--gap) * 6);
  --stageH: clamp(560px, 68vh, 720px);

  /* header allowance */
  --topSpace: 130px;

  width:100%;
  height:calc(100vh - var(--topSpace));
  display:grid;
  place-items:center;
  overflow:visible;
}

.stage{
  width:var(--stageW);
  height:var(--stageH);
  /* NOTE: removed transform: scale(...) to avoid sub-pixel jitter */
}

.grid{
  width:100%;
  height:100%;
  display:grid;
  grid-template-columns:repeat(7,var(--colw));
  gap:var(--gap);
  align-items:start;
}

/* ---------- Rounds ---------- */
.round { position:relative; }

.roundTitle{
  color:#dfe6f3;
  font-weight:900;
  font-size:12px;
  letter-spacing:.08em;
  text-transform:uppercase;
  margin-bottom:8px;
}

.stack{ position:relative; display:grid; }

/* vertical spacing for perfect alignment */
.r16 .pair{ margin: calc(var(--r16Space)/2) 0; }
.qf  .pair{ margin: calc(var(--qfSpace)/2) 0; }   /* centers QF between two R16s */
.sf  .pair{ margin: calc(var(--sfSpace)/2) 0; }   /* centers SF between two QFs */

/* ---------- Pair (two separate square slots) ---------- */
.pair{
  position:relative;
  padding: var(--pairPad) 0;
}

/* two square slots */
.slot{
  height: var(--slotH);
  border: var(--border) solid var(--slotBorder);
  border-radius: 0;             /* SQUARE corners */
  background: var(--slotBg);
  display:flex;
  align-items:center;
  padding: 0 10px;
  box-shadow: none;
}
.slot + .slot{ margin-top: var(--pairGapInside); }

.label{
  color: var(--textDark);
  font-weight: 700;
  font-size: 13px;
  white-space:nowrap;
  overflow:hidden;
  text-overflow:ellipsis;
}

/* ---------- Exact Y math for connectors ---------- */
/* This is the *true* midpoint between the two slots, counting borders & padding */
.pair{
  /* midpoint from top edge of .pair box: pairPad + slotH + (gap)/2 + border */
  --midY: calc(var(--pairPad) + var(--slotH) + (var(--pairGapInside) / 2) + var(--border));
}

/* short stub that leaves each pair toward the next column (at exact midY) */
.pair::after{
  content:"";
  position:absolute;
  top: var(--midY);
  right: calc(var(--stub) * -1);
  width: var(--stub);
  height: var(--joinW);
  background: var(--line);
}
.sideRight.pair::after{
  left: calc(var(--stub) * -1);
  right: auto;
}

/* QF & SF: horizontal arm across the gap + vertical collector at arm end, both at exact midY */
.qf .pair, .sf .pair{
  background-image:
    linear-gradient(var(--line), var(--line)),  /* vertical collector */
    linear-gradient(var(--line), var(--line));  /* horizontal arm */
  background-repeat: no-repeat, no-repeat;

  /* vertical collector spans the distance between the two slots (top⇄bottom), including borders */
  background-size:
    var(--joinW) calc(var(--slotH) + var(--pairGapInside) + var(--border) * 2),
    var(--arm) var(--joinW);

  /* place both at exact midY: one as a Y offset from top */
  background-position:
    left calc(var(--gap) * -1 + var(--arm)) var(--midY),
    left calc(var(--gap) * -1)              var(--midY);
}
.right .qf .pair, .right .sf .pair{
  background-position:
    right calc(var(--gap) * -1 + var(--arm)) var(--midY),
    right calc(var(--gap) * -1)              var(--midY);
}

/* ---------- Right-column helper ---------- */
.right { direction:ltr; }   /* keep text LTR while mirroring arms */

/* ---------- Final block (neutral; square) ---------- */
.finalCol{ position:relative; }

.winner{
  text-align:center;
  color:#e7ecf5;
  opacity:.9;
  font-weight:900;
  letter-spacing:.10em;
  text-transform:uppercase;
  font-size:12px;
  margin-bottom:8px;
}

.champWrap{ display:grid; place-items:center; margin-bottom:6px; }

.champBox{
  min-width: var(--colw);
  background:#1c2952;
  border: var(--border) solid #122040;
  color:#ffffff;
  border-radius: 0;           /* SQUARE */
  padding:10px 16px;
}

.champText{ font-weight:800; }

.stem{
  width:var(--joinW);
  height:18px;
  background:var(--line);
  border-radius:0;
  margin:8px auto;
}

.finalRow{
  display:grid;
  grid-template-columns:1fr 14px 1fr;
  align-items:center;
  gap:10px;
}

.finalSlot{
  background:#ffffff;
  border: var(--border) solid var(--slotBorder);
  color:#0f1320;
  border-radius:0;            /* SQUARE */
  padding:10px 14px;
  height: var(--slotH);
  display:flex;
  align-items:center;
  justify-content:center;
}

.finalText{ font-weight:700; font-size:13px; }

.midbar{
  height:var(--joinW);
  width:100%;
  background:var(--line);
  border-radius:0;
}
