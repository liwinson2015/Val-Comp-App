/* Square-slot bracket, compact width, ESPN-style connectors + perfect centering */

/* ---------- Canvas sizing & auto-fit ---------- */
.viewport{
  /* columns + gaps */
  --colw: clamp(130px, 10vw, 160px);
  --gap:  clamp(16px, 2vw, 24px);

  /* slot & pair geometry */
  --slotH: 38px;             /* height of each player box */
  --pairGapInside: 12px;     /* gap between top/bottom slots in a pair */
  --pairPad: 4px;            /* vertical padding around each pair (for line accuracy) */

  /* derived per-pair metrics */
  --pairH: calc(var(--slotH)*2 + var(--pairGapInside) + var(--pairPad)*2);

  /* centers next round stacks between their feeders */
  --r16Space: clamp(18px, 2vh, 24px);
  --qfSpace:  calc(var(--pairH) + var(--r16Space));
  --sfSpace:  calc(var(--pairH) + var(--qfSpace));

  /* connector styling */
  --line: #2a2f36;           /* bracket line color */
  --joinW: 2px;              /* line thickness */
  --stub: 12px;              /* short stub out of each feeder toward next column */
  --arm:  calc(var(--gap) - var(--stub)); /* horizontal arm from collector across gap */

  /* neutral box colors */
  --slotBg: #f7f8fc;
  --slotBorder: #cdd6ea;
  --textDark: #0f1320;

  /* stage sizing */
  --stageW: calc(var(--colw) * 7 + var(--gap) * 6);
  --stageH: clamp(560px, 70vh, 760px);

  /* header allowance (space above bracket for page header/nav) */
  --topSpace: 120px;

  /* scale stage to fit viewport without overflow */
  --fitW: calc(100vw / var(--stageW));
  --fitH: calc((100vh - var(--topSpace)) / var(--stageH));
  --scale: min(1, var(--fitW), var(--fitH));

  /* y-positions for top/bottom slot centers within a pair */
  --yTop: calc(var(--pairPad) + var(--slotH) / 2);
  --yBot: calc(var(--pairPad) + var(--slotH) + var(--pairGapInside) + var(--slotH) / 2);

  width:100%;
  height:calc(100vh - var(--topSpace));
  display:grid;
  place-items:center;
  overflow:visible;
  background: radial-gradient(1200px 600px at 50% -200px, #0f172a 0%, #0b1020 60%, #091021 100%);
}
.stage{
  width:var(--stageW);
  height:var(--stageH);
  transform:scale(var(--scale));
  transform-origin:top center;
}
.grid{
  width:100%; height:100%;
  display:grid; grid-template-columns:repeat(7,var(--colw));
  gap:var(--gap); align-items:start; justify-items:center;
}

/* ---------- Rounds ---------- */
.round { position:relative; width:100%; }
.roundTitle{
  color:#dfe6f3; font-weight:900; font-size:12px;
  letter-spacing:.08em; text-transform:uppercase; margin-bottom:8px;
  text-align:center; opacity:.95;
}
.stack{ position:relative; display:grid; width:100%; }

/* vertical spacing for perfect alignment */
.r16 .pair{ margin: calc(var(--r16Space)/2) 0; }
.qf  .pair{ margin: calc(var(--qfSpace)/2) 0; }   /* centers QF between two R16 pairs */
.sf  .pair{ margin: calc(var(--sfSpace)/2) 0; }   /* centers SF between two QFs */

/* ---------- Pair (two separate square slots) ---------- */
.pair{
  position:relative;
  padding: var(--pairPad) 0;
  width:100%;
}

/* TWO stubs from each feeder (top & bottom) toward the next column */
.pair::before,
.pair::after{
  content:"";
  position:absolute;
  right: calc(var(--stub) * -1);   /* default: feed to the RIGHT */
  width: var(--stub);
  height: var(--joinW);
  background: var(--line);
}
.pair::before{ top: var(--yTop); transform: translateY(-50%); }
.pair::after { top: var(--yBot); transform: translateY(-50%); }

/* mirror when the pair feeds LEFT (right side of the bracket) */
.sideRight.pair::before,
.sideRight.pair::after{
  left: calc(var(--stub) * -1);
  right: auto;
}

.slot{
  height: var(--slotH);
  border: 2px solid var(--slotBorder);
  border-radius: 0;           /* SQUARE corners */
  background: var(--slotBg);
  display:flex; align-items:center; justify-content:space-between;
  padding: 0 10px;
  box-shadow: 0 0 0 1px rgba(255,255,255,.02) inset;
  transition: box-shadow .15s ease, transform .15s ease;
}
.slot + .slot{ margin-top: var(--pairGapInside); }
.slot:hover{
  box-shadow: 0 0 0 1px rgba(255,255,255,.08) inset, 0 1px 0 rgba(0,0,0,.08);
  transform: translateY(-0.5px);
}
.label{
  color: var(--textDark);
  font-weight: 700; font-size: 13px;
  white-space:nowrap; overflow:hidden; text-overflow:ellipsis;
}

/* Optional tiny seed badge on the left (use a <span class="seed">#</span> if you want) */
.seed{
  font-size:10px; font-weight:800; color:#667085; margin-right:8px;
  letter-spacing:.06em;
}

/* ---------- QF & SF T-joins (true ESPN-style) ---------- */
/* We draw: (1) vertical collector, (2) top horizontal arm, (3) bottom horizontal arm */
.qf .pair, .sf .pair{
  background-image:
    linear-gradient(var(--line), var(--line)),  /* vertical collector */
    linear-gradient(var(--line), var(--line)),  /* top arm */
    linear-gradient(var(--line), var(--line));  /* bottom arm */
  background-repeat: no-repeat, no-repeat, no-repeat;
  background-size:
    var(--joinW) calc(var(--slotH) + var(--pairGapInside)), /* vertical bar spans topâ‡„bottom */
    var(--arm) var(--joinW),                                /* top arm */
    var(--arm) var(--joinW);                                /* bottom arm */
  background-position:
    left calc(var(--gap) * -1 + var(--arm)) 50%,  /* vertical collector centered */
    left calc(var(--gap) * -1) var(--yTop),       /* top arm to feeders' top stub */
    left calc(var(--gap) * -1) var(--yBot);       /* bottom arm to feeders' bottom stub */
}

/* Mirror T-join arms for the right half feeding left */
.right .qf .pair, .right .sf .pair{
  background-position:
    right calc(var(--gap) * -1 + var(--arm)) 50%,
    right calc(var(--gap) * -1) var(--yTop),
    right calc(var(--gap) * -1) var(--yBot);
}

/* ---------- Right-column helper ---------- */
.right { direction:ltr; }   /* keep text LTR while mirroring arms */

/* ---------- Final block (center column) ---------- */
.finalCol{
  position:relative;
  width:100%;
  display:grid;
  align-content:start;
  justify-items:center;
}
.winner{
  text-align:center; color:#e7ecf5; opacity:.9;
  font-weight:900; letter-spacing:.10em; text-transform:uppercase; font-size:12px;
  margin-bottom:8px;
}
.champWrap{ display:grid; place-items:center; margin-bottom:6px; }
.champBox{
  min-width: var(--colw);
  background:#1b2a55; border:2px solid #132345; color:#ffffff;
  border-radius: 0;
  padding:10px 16px;
  box-shadow: 0 6px 14px rgba(0,0,0,.25), inset 0 0 0 1px rgba(255,255,255,.04);
}
.champText{ font-weight:800; letter-spacing:.02em; }
.stem{ width:var(--joinW); height:18px; background:var(--line); border-radius:0; margin:8px auto; }

/* NEW: wrapper that mimics a .pair block so the final slots share the same centers */
.finalRowWrap{
  height: var(--pairH);
  margin: calc(var(--sfSpace)/2) 0;   /* match SF vertical spacing */
  padding: var(--pairPad) 0;
  width: 100%;
  display: grid;
  align-items: center;
}

/* the two finalist slots + middle bar */
.finalRow{
  height: calc(var(--slotH)*2 + var(--pairGapInside));
  display: grid;
  grid-template-columns: 1fr 14px 1fr;
  align-items: center;
  gap: 10px;
}
.finalSlot{
  background:#ffffff; border:2px solid var(--slotBorder); color:#0f1320;
  border-radius:0;
  padding:10px 14px;
  height: var(--slotH);
  display:flex; align-items:center; justify-content:center;
  box-shadow: 0 0 0 1px rgba(0,0,0,.02) inset;
}
.finalText{ font-weight:700; font-size:13px; }
.midbar{ height:var(--joinW); width:100%; background:var(--line); border-radius:0; }

/* ---------- Small screens ---------- */
@media (max-width: 960px){
  .viewport{ --colw: clamp(120px, 22vw, 150px); --gap: clamp(14px, 2.4vw, 20px); }
  .slot{ padding: 0 12px; }
  .champBox{ min-width: clamp(120px, 22vw, 150px); }
}