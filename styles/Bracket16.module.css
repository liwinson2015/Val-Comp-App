/* Square-slot bracket, compact width, QF centered between feeder pairs */

/* ---------- Canvas sizing & auto-fit ---------- */
.viewport{
  /* narrower columns so boxes are shorter horizontally */
  --colw: clamp(130px, 10vw, 155px);
  --gap:  clamp(16px, 2vw, 22px);

  /* slot & pair geometry */
  --slotH: 38px;             /* height of each player box */
  --pairGapInside: 10px;     /* gap between top/bottom slots in a pair */
  --pairPad: 4px;            /* small vertical padding for connector accuracy */

  /* derived: full pair height and spacing rhythms */
  --pairH: calc(var(--slotH)*2 + var(--pairGapInside) + var(--pairPad)*2);

  /* vertical rhythms to CENTER next-round boxes between feeders */
  --r16Space: clamp(18px, 2vh, 24px);           /* spacing between R16 pairs */
  --qfSpace:  calc(var(--pairH) + var(--r16Space)); /* centers QF between two R16s */
  --sfSpace:  calc(var(--pairH) + var(--qfSpace));  /* centers SF between two QFs */

  /* connector styling */
  --line: #2a2f36;           /* bracket line color */
  --joinW: 2px;              /* line thickness */
  --stub: 10px;              /* short stub out of each pair toward next column */
  --arm:  calc(var(--gap) - var(--stub));       /* horizontal arm across the gap */

  /* neutral box colors (we’ll theme later) */
  --slotBg: #f4f6fb;
  --slotBorder: #cfd7ea;
  --textDark: #0f1320;

  /* stage derived */
  --stageW: calc(var(--colw) * 7 + var(--gap) * 6);
  --stageH: clamp(560px, 68vh, 720px);

  /* header allowance */
  --topSpace: 130px;

  /* scale to fit viewport */
  --fitW: calc(100vw / var(--stageW));
  --fitH: calc((100vh - var(--topSpace)) / var(--stageH));
  --scale: min(1, var(--fitW), var(--fitH));

  width:100%;
  height:calc(100vh - var(--topSpace));
  display:grid;
  place-items:center;
  overflow:visible;
}
.stage{ width:var(--stageW); height:var(--stageH); transform:scale(var(--scale)); transform-origin:top center; }
.grid{
  width:100%; height:100%;
  display:grid; grid-template-columns:repeat(7,var(--colw));
  gap:var(--gap); align-items:start;
}

/* ---------- Rounds ---------- */
.round { position:relative; }
.roundTitle{
  color:#dfe6f3; font-weight:900; font-size:12px;
  letter-spacing:.08em; text-transform:uppercase; margin-bottom:8px;
}
.stack{ position:relative; display:grid; }

/* vertical spacing for perfect alignment */
.r16 .pair{ margin: calc(var(--r16Space)/2) 0; }
.qf  .pair{ margin: calc(var(--qfSpace)/2) 0; }   /* centers QF between two R16 pairs */
.sf  .pair{ margin: calc(var(--sfSpace)/2) 0; }   /* centers SF between two QFs */

/* ---------- Pair (two separate square slots) ---------- */
.pair{
  position:relative;
  padding: var(--pairPad) 0;
}

/* short stub that leaves each pair toward the next column */
.pair::after{
  content:"";
  position:absolute; top:50%; right: calc(var(--stub) * -1);
  transform: translateY(-50%);
  width: var(--stub); height: var(--joinW);
  background: var(--line);
}
.sideRight.pair::after{
  left: calc(var(--stub) * -1);
  right: auto;
}

/* two square slots */
.slot{
  height: var(--slotH);
  border: 2px solid var(--slotBorder);
  border-radius: 0;           /* SQUARE corners */
  background: var(--slotBg);
  display:flex; align-items:center;
  padding: 0 10px;
  box-shadow: none;           /* flatter like your reference */
}
.slot + .slot{ margin-top: var(--pairGapInside); }
.label{
  color: var(--textDark);
  font-weight: 700; font-size: 13px;
  white-space:nowrap; overflow:hidden; text-overflow:ellipsis;
}

/* ---------- QF & SF T-joins (centered between feeders) ---------- */
/* horizontal arm across the gap + vertical collector at arm end */
.qf .pair, .sf .pair{
  background-image:
    linear-gradient(var(--line), var(--line)),  /* vertical collector */
    linear-gradient(var(--line), var(--line));  /* horizontal arm */
  background-repeat: no-repeat, no-repeat;
  background-size:
    var(--joinW) calc(var(--slotH) + var(--pairGapInside)),  /* vertical bar spans top⇄bottom */
    var(--arm) var(--joinW);                                 /* arm to the next column */
  background-position:
    left calc(var(--gap) * -1 + var(--arm)) 50%,
    left calc(var(--gap) * -1)              50%;
}
.right .qf .pair, .right .sf .pair{
  background-position:
    right calc(var(--gap) * -1 + var(--arm)) 50%,
    right calc(var(--gap) * -1)              50%;
}

/* ---------- Right-column helper ---------- */
.right { direction:ltr; }   /* keep text LTR while mirroring arms */

/* ---------- Final block (keep neutral; square) ---------- */
.finalCol{ position:relative; }
.winner{
  text-align:center; color:#e7ecf5; opacity:.9;
  font-weight:900; letter-spacing:.10em; text-transform:uppercase; font-size:12px;
  margin-bottom:8px;
}
.champWrap{ display:grid; place-items:center; margin-bottom:6px; }
.champBox{
  min-width: var(--colw);
  background:#1c2952; border:2px solid #122040; color:#ffffff;
  border-radius: 0;           /* SQUARE */
  padding:10px 16px;
}
.champText{ font-weight:800; }
.stem{ width:var(--joinW); height:18px; background:var(--line); border-radius:0; margin:8px auto; }
.finalRow{ display:grid; grid-template-columns:1fr 14px 1fr; align-items:center; gap:10px; }
.finalSlot{
  background:#ffffff; border:2px solid var(--slotBorder); color:#0f1320;
  border-radius:0;            /* SQUARE */
  padding:10px 14px;
  height: var(--slotH);
  display:flex; align-items:center; justify-content:center;
}
.finalText{ font-weight:700; font-size:13px; }
.midbar{ height:var(--joinW); width:100%; background:var(--line); border-radius:0; }
